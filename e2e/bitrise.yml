format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

workflows:
  test_ndk:
    summary: Test NDK compilation without specifying an NDK version in the step
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-io/android-ndk-sample-project.git
    - BRANCH: ndk22-compatible
    - GRADLE_BUILD_FILE_PATH: ./build.gradle
    - GRADLEW_PATH: ./gradlew
    - ANDROID_NDK_HOME: ""
    before_run:
    - _setup
    steps:
    - script:
        title: Remove ndk-bundle
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            if [ -d $ANDROID_HOME/ndk-bundle ]; then
              mv $ANDROID_HOME/ndk-bundle $ANDROID_HOME/ndk-bundle-original
            fi
    after_run:
    - _run_and_build
    - _restore_ndk_bundle

  test_react_native:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-io/Bitrise-React-Native-Sample.git
    - BRANCH: master
    - GRADLE_BUILD_FILE_PATH: android/build.gradle
    - GRADLEW_PATH: android/gradlew
    before_run:
    - _setup
    steps:
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            yarn
    - gradle-runner:
        inputs:
        - gradle_task: assembleDebug

  test_ndk_install:
    summary: Test installing multiple NDK revisions and compare installed version numbers to expected values
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-io/android-ndk-sample-project.git
    - BRANCH: ndk22-compatible
    - GRADLE_BUILD_FILE_PATH: build.gradle
    - GRADLEW_PATH: ./gradlew
    before_run:
    - _setup
    steps:
    - path::./:
        title: Execute step without NDK version
        inputs:
        - ndk_version: ""
    - path::./:
        title: Execute step with NDK r18
        inputs:
        - ndk_version: 18.1.5063045
    - script:
        title: Check installed NDK version
        inputs:
        - content: |-
            EXPECTED_VERSION=18.1.5063045
            NDK_VERSION=`cat $ANDROID_HOME/ndk/18.1.5063045/source.properties | grep Pkg.Revision | cut -d'=' -f2 | cut -d' ' -f2`
            if [ $NDK_VERSION != $EXPECTED_VERSION ]; then
              echo "Unexpected installed NDK version: $NDK_VERSION"
              echo "Expected: $EXPECTED_VERSION"
              exit 1
            else
              echo "NDK version is correct: $NDK_VERSION"
            fi
    - path::./:
        title: Execute step again with NDK r18
        inputs:
        - ndk_version: 18.1.5063045
    - script:
        title: Check installed NDK version
        inputs:
        - content: |-
            EXPECTED_VERSION=18.1.5063045
            NDK_VERSION=`cat $ANDROID_HOME/ndk/18.1.5063045/source.properties | grep Pkg.Revision | cut -d'=' -f2 | cut -d' ' -f2`
            if [ $NDK_VERSION != $EXPECTED_VERSION ]; then
              echo "Unexpected installed NDK version: $NDK_VERSION"
              echo "Expected: $EXPECTED_VERSION"
              exit 1
            else
              echo "NDK version is correct: $NDK_VERSION"
            fi
    - path::./:
        title: Execute step with NDK r17
        inputs:
        - ndk_version: 17.2.4988734
    - script:
        title: Check installed NDK version
        inputs:
        - content: |-
            EXPECTED_VERSION=17.2.4988734
            NDK_VERSION=`cat $ANDROID_HOME/ndk/17.2.4988734/source.properties | grep Pkg.Revision | cut -d'=' -f2 | cut -d' ' -f2`
            if [ $NDK_VERSION != $EXPECTED_VERSION ]; then
              echo "Unexpected installed NDK version: $NDK_VERSION"
              echo "Expected: $EXPECTED_VERSION"
              exit 1
            else
              echo "NDK version is correct: $NDK_VERSION"
            fi
    - path::./:
        title: Execute step with NDK r22
        description: NDK r22 doesn't contain the platforms dir anymore
        inputs:
        - ndk_version: 22.1.7171670
    - script:
        title: Check installed NDK version
        inputs:
        - content: |-
            EXPECTED_VERSION=22.1.7171670
            NDK_VERSION=`cat $ANDROID_HOME/ndk/22.1.7171670/source.properties | grep Pkg.Revision | cut -d'=' -f2 | cut -d' ' -f2`
            if [ $NDK_VERSION != $EXPECTED_VERSION ]; then
              echo "Unexpected installed NDK version: $NDK_VERSION"
              echo "Expected: $EXPECTED_VERSION"
              exit 1
            else
              echo "NDK version is correct: $NDK_VERSION"
            fi
    - path::./:
        title: Execute step with NDK r23
        inputs:
        - ndk_version: 23.0.7599858
    - script:
        title: Check installed NDK version
        inputs:
        - content: |-
            EXPECTED_VERSION=23.0.7599858
            NDK_VERSION=`cat $ANDROID_HOME/ndk/23.0.7599858/source.properties | grep Pkg.Revision | cut -d'=' -f2 | cut -d' ' -f2`
            if [ $NDK_VERSION != $EXPECTED_VERSION ]; then
              echo "Unexpected installed NDK version: $NDK_VERSION"
              echo "Expected: $EXPECTED_VERSION"
              exit 1
            else
              echo "NDK version is correct: $NDK_VERSION"
            fi
    - gradle-runner:
        inputs:
        - gradle_task: assembleDebug

  test_support_library:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-io/sample-apps-android-x.git
    - BRANCH: master
    - GRADLE_BUILD_FILE_PATH: build.gradle
    - GRADLEW_PATH: ./gradlew
    before_run:
    - _setup
    steps:
    - script:
        title: Uninstall Android SDK
        inputs:
        - content: |-
            #!/usr/bin/env bash
            sdkmanager --uninstall "extras;android;m2repository"
    after_run:
    - _run_and_build

  test_build_tools_not_installed:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-io/Bitrise-Android-Sample.git
    - BRANCH: main
    - GRADLE_BUILD_FILE_PATH: build.gradle
    - GRADLEW_PATH: ./gradlew
    before_run:
    - _setup
    after_run:
    - _run_and_build
    - _restore_build_tools
    steps:
    - script:
        title: Remove preinstalled SDK build-tools
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            mv $ANDROID_HOME/build-tools $ANDROID_HOME/build-tools-original

  _setup:
    steps:
    - script:
        title: Clean _tmp dir
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -e
            rm -rf ./_tmp
    - change-workdir:
        title: Switch working dir to _tmp
        run_if: "true"
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - git::https://github.com/bitrise-steplib/bitrise-step-simple-git-clone.git@master:
        title: Clone sample app
        inputs:
        - repository_url: $SAMPLE_APP_URL
        - clone_into_dir: .
        - branch: $BRANCH
  _run_and_build:
    steps:
    - path::./:
        title: Execute step
    - gradle-runner:
        inputs:
        - gradle_task: assembleDebug
  _restore_build_tools:
    steps:
    - script:
        title: Restore preinstalled SDK build-tools
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            rm -rf $ANDROID_HOME/build-tools
            mv $ANDROID_HOME/build-tools-original $ANDROID_HOME/build-tools
  _restore_ndk_bundle:
    steps:
    - script:
        title: Restore preinstalled ndk-bundle
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            rm -rf $ANDROID_HOME/ndk-bundle
            if [ -d $ANDROID_HOME/ndk-bundle-original ]; then
              mv $ANDROID_HOME/ndk-bundle-original $ANDROID_HOME/ndk-bundle
            fi
